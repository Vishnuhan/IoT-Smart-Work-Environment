{"version":3,"file":"static/js/main.cbfbb6ad.js","mappings":"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","sources":["AddProjectPage.js","TaskToggle.js","AddNotification.js","NotificationBar.js","PMPage.js","BookRoomPage.js","AccountPage.js","TemperaturesPage.js","NewMeetingScreen.js","MeetingRoom.js","BottomTabNavigator.js","LoginScreen.js","RegisterScreen.js","homepage.js","OnboardScreen.js","App.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, TouchableOpacity } from 'react-native';\nimport axios from 'axios';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker'; // This is for a modal date picker\n\nconst AddProject = () => {\n  const [projectName, setProjectName] = useState('');\n  // const [percentageComplete, setPercentageComplete] = useState('');\n  const [team, setTeam] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n  const [notification, setNotification] = useState({ visible: false, message: '', theme: 'light' });\n  const API_URL = 'https://capstone-cmml.onrender.com';\n  // const API_URL = 'http://localhost:3001';\n\n  const showNotification = (message, theme = 'light') => {\n    setNotification({ visible: true, message, theme });\n    setTimeout(() => {\n      setNotification({ visible: false, message: '', theme: 'light' });\n    }, 3000); // hide after 3 seconds\n  };\n\n  const handleAddProject = async () => {\n    if (!projectName || !team || !dueDate) {\n      showNotification('TextFields cannot be empty', 'red');\n      return;\n    }\n\n    try {\n      const teamArray = team.split(',').map(item => item.trim());\n      const projectData = {\n        Name: projectName,\n        // Percentage_Complete: parseFloat(percentageComplete),\n        Due_Date: dueDate,\n        Team: teamArray,\n      };\n\n      await axios.post(`${API_URL}/auth/projects`, projectData);\n      showNotification('Project successfully added!', 'green');\n    } catch (error) {\n      showNotification('Project was not added!', 'red');\n    }\n  };\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n  };\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const handleConfirmDate = (date) => {\n    setDueDate(date.toISOString().split('T')[0]); // Save the formatted date\n    hideDatePicker();\n  };\n\n  const handleDateChange = (event) => {\n    setDueDate(event.target.value); // Update due date from the event\n    setShowDatePicker(false); // Hide the date picker\n  };\n\n\n\nreturn (\n  <View style={styles.container}>\n    {notification.visible && (\n      <View style={[styles.notification, { backgroundColor: notification.theme === 'red' ? '#FFCCCC' : '#CCFFCC' }]}>\n        <Text style={styles.notificationText}>{notification.message}</Text>\n        <TouchableOpacity onPress={() => setNotification({ visible: false, message: '', theme: 'light' })}>\n          <Text style={styles.closeButton}>X</Text>\n        </TouchableOpacity>\n      </View>\n    )}\n    <Text style={styles.title}>Add New Project</Text>\n    <View style={styles.inputContainer}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Project Name\"\n        value={projectName}\n        onChangeText={setProjectName}\n      />\n      {/* <TextInput\n        style={styles.input}\n        placeholder=\"Percentage Complete\"\n        keyboardType=\"numeric\"\n        value={percentageComplete}\n        onChangeText={setPercentageComplete}\n      /> */}\n      <TextInput\n        style={styles.input}\n        placeholder=\"Team (Comma-separated)\"\n        value={team}\n        onChangeText={setTeam}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Due Date (yyyy-mm-dd)\"\n        value={dueDate}\n        onChangeText={setDueDate}\n      />\n      <DateTimePickerModal\n        isVisible={isDatePickerVisible}\n        mode=\"date\"\n        onConfirm={handleConfirmDate}\n        onCancel={hideDatePicker}\n      />\n      <TouchableOpacity style={styles.button} onPress={handleAddProject}>\n  <Text style={styles.buttonText}>Add Project</Text>\n</TouchableOpacity>\n    </View>\n  </View>\n);\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start', // Aligns form to the top of the screen\n    alignItems: 'stretch', // Stretches the items to the sides\n    paddingTop: 50, // Adds space at the top\n    paddingHorizontal: 20, // Adds horizontal padding\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: '#333', // Dark text color for contrast\n  },\n  input: {\n    height: 50, // Increases the height for better touch area\n    width: '100%', // Ensures input stretches to the full width\n    backgroundColor: '#fff', // White background for the input\n    borderColor: '#a832ff', // Purple border color to match the theme\n    borderWidth: 1,\n    marginBottom: 16,\n    paddingLeft: 20, // Adds left padding inside the input\n    borderRadius: 25, // Rounds the corners\n    fontSize: 16, // Increases font size\n    color: '#333', // Dark text color for contrast\n  },\n  // Add styles for the date picker input if necessary\n  // ... other styles\n  button: {\n    backgroundColor: '#a832ff', // Purple button to match the accent color in the app\n    borderRadius: 35, // Rounds the corners\n    height: 50, // Sets a fixed height for consistency\n    justifyContent: 'center', // Centers the button text vertically\n    alignItems: 'center', // Centers the button text horizontally\n    elevation: 3, // Adds a subtle shadow on Android\n    marginTop: 16, // Adds margin to the top\n  },\n  buttonText: {\n    color: '#fff', // White text color\n    fontSize: 18, // Increases font size\n    fontWeight: 'bold', // Makes the text bold\n  }, \n\ninputContainer: {\n  width: '100%',\n},\n\ndatePickerRow: {\n  flexDirection: 'row',\n  alignItems: 'center',\n},\ndateInput: {\n  flex: 1,\n},\ncalendarButton: {\n  borderWidth: 1,\n  borderColor: '#ccc',\n  borderRadius: 5,\n  padding: 10,\n  marginLeft: 5,\n  backgroundColor: '#e8e8e8', // Slightly darker grey for the button\n},\ncalendarText: {\n  fontSize: 16,\n},\nnotification: {\n  position: 'absolute',\n  top: 10,\n  left: 10,\n  right: 10,\n  padding: 20,\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  flexDirection: 'row',\n  zIndex: 1000,\n  borderRadius: 5,\n},\nnotificationText: {\n  color: '#000',\n},\ncloseButton: {\n  color: '#000',\n  fontWeight: 'bold',\n},\n\n\n});\n\nexport default AddProject;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, Switch, StyleSheet } from 'react-native';\nimport axios from 'axios';\n\nconst TaskToggle = ({ project, taskName, taskComplete }) => {\n  useEffect(() => {\n    console.log(project);\n    \n  }, []);\n\n  const [isComplete, setIsComplete] = useState(taskComplete);\n \n  const onToggleSwitch = async() => {\n    setIsComplete((prevValue) => !prevValue);\n    console.log(project)\n    await axios.post('https://capstone-cmml.onrender.com/auth/tasktoggle', {\n      project: project, \n      taskName: taskName,\n      taskComplete: !isComplete\n    })\n    .then(response => {\n      console.log(response);\n    })\n    .catch(error => {\n      console.error('Error updating task completion status:', error);\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.label}>{isComplete ? 'Status: Complete' : 'Status: Incomplete'}</Text>\n      <Switch\n        trackColor={{ false: '#FF6B6B', true: '#4ECDC4' }}\n        thumbColor={isComplete ? '#FFFFFF' : '#FFFFFF'}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={onToggleSwitch}\n        value={isComplete}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#FFFFFF',\n    borderRadius: 6,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    marginVertical: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n    elevation: 3,\n  },\n  label: {\n    fontWeight: 'bold',\n    color: '#344955',\n    flex: 1,\n  },\n  statusText: {\n    marginLeft: 10,\n  },\n});\n\nexport default TaskToggle;","import React, { useState, Alert } from 'react';\nimport { View, Text, TextInput, Button, TouchableOpacity, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationBar from './NotificationBar';\n\nconst AddNotification = () => {\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [time, setTime] = useState('');\n  const [employees, setEmployees] = useState('');\n  const navigation = useNavigation();\n  const url = 'https://capstone-cmml.onrender.com'\n  // const url = 'http://localhost:3001'\n\n  const handleAddNotification = async () => {\n   \n    if (!title || !message || !employees || !time) {\n      Alert.alert('Fields cannot be empty');\n      return;\n    }\n\n    try {\n      const teamArray = employees.split(',').map(item => item.trim());\n      const notificationData = {\n        title,\n        message,\n        targetEmployeeIds: teamArray,\n        createdAt: time,\n      };\n\n      await axios.post(`${url}/auth/addnotifications`, notificationData);\n      console.log('Notification sent successfully!')\n      navigation.navigate('NotificationBar')\n    } catch (error) {\n      console.error('Error adding notification:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Add Notification</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Title\"\n        value={title}\n        onChangeText={setTitle}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Message\"\n        value={message}\n        onChangeText={setMessage}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Target Employee ID's (Comma-separated)\"\n        value={employees}\n        onChangeText={setEmployees}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Created At (mm/dd/yyyy)\"\n        value={time}\n        onChangeText={setTime}\n      />\n<TouchableOpacity style={styles.button} onPress={handleAddNotification}>\n  <Text style={styles.buttonText}>Send Notification</Text>\n</TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start', // Aligns form to the top of the screen\n    alignItems: 'stretch', // Stretches the items to the sides\n    paddingTop: 50, // Adds space at the top\n    paddingHorizontal: 20, // Adds horizontal padding\n    // backgroundColor: '#F0EBE3', // Matches the background color\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: '#333', // Dark text color for contrast\n  },\n  input: {\n    height: 50, // Increases the height for better touch area\n    width: '100%', // Ensures input stretches to the full width\n    backgroundColor: '#fff', // White background for the input\n    borderColor: '#B9C6AE', // Border color to match the theme\n    borderWidth: 1,\n    marginBottom: 16,\n    paddingLeft: 20, // Adds left padding inside the input\n    borderRadius: 25, // Rounds the corners\n    fontSize: 16, // Increases font size\n    color: '#333', // Dark text color for contrast\n  },\n  button: {\n    backgroundColor: '#a832ff', // Purple button to match the accent color in the app\n    borderRadius: 35, // Rounds the corners\n    height: 50, // Sets a fixed height for consistency\n    justifyContent: 'center', // Centers the button text vertically\n    alignItems: 'center', // Centers the button text horizontally\n    elevation: 3, // Adds a subtle shadow on Android\n    marginTop: 16, // Adds margin to the top\n  },\n  \n  buttonText: {\n    color: '#fff', // White text color\n    fontSize: 18, // Increases font size\n    fontWeight: 'bold', // Makes the text bold\n  },\n\n});\n\n\n\nexport default AddNotification;\n","// Import the necessary modules\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport AddNotification from './AddNotification';\nimport { useNavigation } from '@react-navigation/native';\n\n// Define the NotificationBar component\nconst NotificationBar = ({ route }) => {\n  const [notifications, setNotifications] = useState([]);\n  const { employeeId } = route.params;\n  const navigation = useNavigation();\n  const url = 'https://capstone-cmml.onrender.com'\n  // const url = 'http://localhost:3001'\n\n  // Function to fetch notifications\n  const fetchNotifications = async () => {\n    try {\n      const response = await axios.get(`${url}/auth/notifications?employeeID=${employeeId}`);\n      setNotifications(response.data); // Update notifications state with fetched data\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n\n  // useEffect hook to fetch notifications when component mounts or employeeId changes\n  useEffect(() => {\n    fetchNotifications();\n  }, [employeeId]);\n\n  // Function to mark a notification as read\n  const markAsRead = async (notificationTitle) => {\n    try {\n      await axios.patch(`${url}/auth/notifications/read?title=${notificationTitle}&employeeID=${employeeId}`);\n      // Immediately reflect the change in the UI\n      setNotifications(notifications.map(n =>\n        n.title === notificationTitle && !n.readBy.includes(employeeId)\n          ? { ...n, readBy: [...n.readBy, employeeId] }\n          : n\n      ));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n\n  // Function to delete a notification\n  const deleteNotification = async (notificationTitle) => {\n    try {\n      await axios.delete(`${url}/auth/notifications/delete?title=${notificationTitle}`);\n      // Immediately reflect the change in the UI\n      setNotifications(notifications.filter(n => n.title !== notificationTitle));\n    } catch (error) {\n      console.error('Error deleting notification:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Header */}\n      <Text style={styles.header}>Notifications</Text>\n      \n      {/* Refresh Button */}\n      {/* <TouchableOpacity onPress={fetchNotifications} style={styles.refreshButton}>\n        <Icon name=\"refresh\" size={20} color=\"#3498db\" />\n      </TouchableOpacity> */}\n      \n      {/* Add Notification Button */}\n      {/* <TouchableOpacity onPress={() => navigation.navigate('AddNotification')} style={styles.addNotificationButton}>\n        <Icon name=\"add-alert\" size={30} color=\"#3498db\" />\n      </TouchableOpacity> */}\n\n      <TouchableOpacity onPress={fetchNotifications} style={styles.refreshButton}>\n    <Icon name=\"refresh\" size={24} color=\"#a832ff\" />\n  </TouchableOpacity>\n\n  <TouchableOpacity onPress={() => navigation.navigate('AddNotification')} style={styles.addNotificationButton}>\n    <Icon name=\"add-alert\" size={30} color=\"#a832ff\" /> \n  </TouchableOpacity>\n      \n      {/* Render notifications */}\n      {notifications.map((notification, index) => (\n        <View key={index} style={[styles.card, notification.readBy.includes(employeeId) ? styles.cardRead : styles.cardUnread]}>\n          {/* Title and Delete Button */}\n          <View style={styles.titleRow}>\n            <Text style={styles.cardTitle}>{notification.title}</Text>\n            <TouchableOpacity onPress={() => deleteNotification(notification.title)} style={styles.deleteButton}>\n              <Icon name=\"delete\" size={24} color=\"#f00\" />\n            </TouchableOpacity>\n          </View>\n          \n          {/* Message and Time */}\n          <Text style={styles.cardMessage}>{notification.message}</Text>\n          <Text style={styles.cardTime}>{new Date(notification.createdAt).toLocaleString()}</Text>\n          \n          {/* Mark as Read Button */}\n          <TouchableOpacity onPress={() => markAsRead(notification.title)} style={styles.markAsReadButton}>\n            <Text style={styles.markAsReadButtonText}>Mark as Read</Text>\n          </TouchableOpacity>\n        </View>\n      ))}\n    </View>\n  );\n};\n\n// Styles\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f0f0f0',\n    padding: 10,\n  },\n  header: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  cardUnread: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n  },\n  cardTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  cardMessage: {\n    fontSize: 14,\n  },\n  cardTime: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 5,\n  },\n  // markAsReadButton: {\n  //   marginTop: 10,\n  //   backgroundColor: '#4CAF50',\n  //   padding: 10,\n  //   borderRadius: 5,\n  // },\n  // markAsReadButtonText: {\n  //   color: '#fff',\n  //   textAlign: 'center',\n  // },\n  // cardRead: {\n  //   opacity: 0.5, // Or use backgroundColor to dim the card\n  // },\n  titleRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between', // This spreads out the title and the delete button on both ends\n    alignItems: 'center', // This centers them vertically in case they have different heights\n    width: '100%', // Ensure the row takes up the full width of the card\n  },\n  deleteButton: {\n    // You might want to adjust padding or margin based on your layout needs\n    padding: 5,\n    marginLeft: 10, // Add some space between the title and the button if needed\n  },\n  refreshButton: {\n    alignSelf: 'flex-end',\n    marginTop: -30,\n    marginRight: 50,\n  },\n  addNotificationButton: {\n    alignSelf: 'flex-end',\n    marginTop: -30,\n    marginRight: 10,\n    marginBottom: 5,\n  },\n  cardRead: {\n    backgroundColor: '#fff', // Keep background color white for consistency\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: 'rgba(163, 159, 159, 0.5)', // Grey border with lower opacity\n    borderStyle: 'dashed', // Style the border as dashed or solid based on your preference,\n    opacity: 0.5\n  },\n  markAsReadButton: {\n    marginTop: 10,\n    backgroundColor: '#a832ff', // Update the button color to purple to match the theme\n    padding: 10,\n    borderRadius: 20,\n  },\n  markAsReadButtonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n});\n\nexport default NotificationBar;","import React, { useState, useEffect } from 'react';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport {\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n  StyleSheet,\n  ScrollView,\n  Modal,\n  TextInput,\n  Button,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport axios from 'axios';\nimport { BarChart } from 'react-native-chart-kit';\nimport { Dimensions } from 'react-native';\nimport AddProjectPage from './AddProjectPage'; // Adjust the import path as needed\nimport TaskToggle from './TaskToggle'; // Import the TaskToggle component\nimport NotificationBar from './NotificationBar';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useFocusEffect } from '@react-navigation/native';\n\n\nconst API_URL = 'https://capstone-cmml.onrender.com'; // Define your API URL here\n// const API_URL = 'http://localhost:3001'; // Define your API URL here\n\n\n\nconst Tab = createMaterialTopTabNavigator();\nconst Stack = createStackNavigator();\n\n\nconst PHASES = [\n  { name: 'Planning', percentage: Math.floor(Math.random() * 100) },\n  { name: 'Implementation', percentage: Math.floor(Math.random() * 100) },\n  { name: 'Testing', percentage: Math.floor(Math.random() * 100) },\n  { name: 'Deployment', percentage: Math.floor(Math.random() * 100) },\n];\n\n// const renderPhaseCard = (navigation, phase, projectName, project) => {\n//   var count = 0, count2 = 0;\n//   project.Tasks.forEach(item =>{\n//     if(phase.name === item.taskPhase){\n//       count++;\n//     }\n\n//     if(phase.name === item.taskPhase && item.taskComplete){\n//       count2++;\n//     }\n//   })\n \n//   console.log(count, count2);\n//   var percentage = (count2 / count) * 100;\n\n//   if(isNaN(percentage)){\n//     percentage = 0;\n//   }\n\nconst renderPhaseCard = (navigation, phase, projectName, project) => {\n  var count = 0, count2 = 0;\n  project.Tasks.forEach(item => {\n    if(phase.name === item.taskPhase){\n      count++;\n    }\n\n    if(phase.name === item.taskPhase && item.taskComplete){\n      count2++;\n    }\n  });\n\n  console.log(count, count2);\n  // Calculate the percentage and use Math.ceil to round it up\n  var percentage = count > 0 ? Math.ceil((count2 / count) * 100) : 0;\n\n//   return (\n//     <TouchableOpacity onPress={() => navigation.navigate('Tasks', { phase, projectName })}>\n//       <View style={styles.phaseCard}>\n//         <Text style={styles.cardTitle}>{phase.name}</Text>\n//         <Text style={styles.cardPercentage}>{`${percentage}% Completed`}</Text>\n//       </View>\n//     </TouchableOpacity>\n//   );\n// };\n\nreturn (\n  <TouchableOpacity onPress={() => navigation.navigate('Tasks', { phase, projectName })}>\n    <View style={styles.phaseCardContainer}>\n      <View style={styles.phaseCard}>\n        <Text style={styles.cardTitle}>{phase.name}</Text>\n        <View style={styles.progressBarBackground}>\n          <View style={[styles.progressBar, { width: `${percentage}%` }]} />\n        </View>\n        <Text style={styles.cardPercentage}>{`${percentage}% Completed`}</Text>\n      </View>\n    </View>\n  </TouchableOpacity>\n);\n};\n\n\n\nconst PMPage = ({ route }) => {\n  const { employeeId, employeeName} = route.params;\n  console.log(employeeId, employeeName);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    \n    navigation.setOptions({\n      headerRight: () => (\n        <View style={{ flexDirection: 'row', marginRight: 10 }}>\n          {employeeId === 'admin' && (\n            <TouchableOpacity\n              style={{ marginRight: 20 }}\n              onPress={() => navigation.navigate('AddProjectPage')}\n            >\n              <Icon name=\"add-box\" size={30} color='#a832ff' />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity\n            onPress={() => navigation.navigate('NotificationBar')}\n          >\n            <Icon name=\"notifications\" size={30} color='#a832ff' />\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation, employeeId]);\n\n  return (\n    <Stack.Navigator initialRouteName=\"PMTopTabNavigator\" headerMode=\"none\">\n      <Stack.Screen name=\"PMTopTabNavigator\" component={PMTopTabNavigator} initialParams={{ employeeId: employeeId, employeeName: employeeName }} />\n      <Stack.Screen name=\"ProjectDetails\" component={ProjectDetailsScreen} />\n      <Stack.Screen name=\"Tasks\" component={TasksPage} initialParams={{ employeeId: employeeId }}/>\n      <Stack.Screen name=\"AddProjectPage\" component={AddProjectPage} />\n      <Stack.Screen name=\"NotificationBar\" component={NotificationBar} initialParams={{ employeeId: employeeId }}/>\n    </Stack.Navigator>\n  );\n};\n\n\nconst renderTaskCard = (task, projectName) => {\n\nreturn (\n  <TouchableOpacity onPress={() => {/* handle task card press */}}>\n    <View style={styles.phaseCardContainer}>\n      <View style={styles.phaseCard}>\n        <Text style={styles.cardTitle}>{task.taskName}</Text>\n        <Text style={styles.phase}>{`Phase: ${task.taskPhase}`}</Text>\n        {/* Include the TaskToggle component here */}\n        \n        <TaskToggle project={projectName} taskName={task.taskName} taskComplete={task.taskComplete} />\n        \n        <Text style={styles.employees}>\n          Employees: {task.employees ? task.employees.join(', ') : 'None'}\n        </Text>\n      </View>\n    </View>\n  </TouchableOpacity>\n);\n};\n\n\nconst TasksPage = ({ route }) => {\n  const { phase, projectName, employeeId } = route.params;\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [newTaskName, setNewTaskName] = useState('');\n  const [newTaskPhase, setNewTaskPhase] = useState('');\n  const [newTaskSize, setNewTaskSize] = useState('');\n  const [newTaskNumEmployees, setNewTaskNumEmployees] = useState(1);\n  const [newTaskEmployees, setNewTaskEmployees] = useState([]);\n  const [employeeInputs, setEmployeeInputs] = useState([\"\"]);\n\n  const [projectTasks, setProjectTasks] = useState([]);\n  const [newProjectName, setNewProjectName] = useState();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/auth/projects`);\n        console.log(response);\n        const project = response.data.find((p) => p.Name === projectName);\n  \n        if (project) {\n          const tasksForPhase = project.Tasks.filter((t) => t.taskPhase === phase.name);\n          setProjectTasks(tasksForPhase);\n        }\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n  \n    fetchTasks();\n    setNewProjectName(projectName); // Automatically set the project name\n    setNewTaskPhase(phase.name)\n  }, [phase.name, projectName]);\n\n  const handleUpdateSampleEmployees = async () => {\n    if (!newTaskName) {\n      console.log('Please enter a task name before updating sample employees.');\n      return;\n    }\n\n    try {\n      const response = await axios.get(`${API_URL}/auth/users`);\n      const user_Data = await axios.post(`${API_URL}/auth/get-suggestions.py`, {\n        user_data: response.data,\n        new_task_name: newTaskName,\n      });\n\n      const val = convertStringToJson();\n      const val_json = JSON.parse(val);\n\n      setNewTaskEmployees(val_json.map((name) => name.EmployeeName));\n\n      function convertStringToJson() {\n        const lines = user_Data.data.trim().split('\\n');\n        lines.shift();\n        const employees = lines.map((line) => {\n          const [id, ...nameParts] = line.trim().split(' ');\n          const name = nameParts.join(' ');\n          return { id: parseInt(id, 10), EmployeeName: name };\n        });\n        return JSON.stringify(employees, null, 2);\n      }\n\n      const jsonOutput = convertStringToJson(user_Data.data);\n      console.log(jsonOutput);\n    } catch (error) {\n      console.error('Error fetching sample users:', error);\n    }\n  };\n\n  const handleAddTask = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleSaveTask = async () => {\n    // Assuming you have states for task name, due date, and possibly other details\n    // Prepare the task details including the employee inputs\n    const taskDetails = {\n      project: newProjectName,\n      taskName: newTaskName,\n      taskPhase: newTaskPhase,\n      taskSize: newTaskSize, \n      employees: employeeInputs.filter(input => input.trim() !== ''), // Filter out any empty strings\n      taskSize: newTaskSize,\n      employees: employeeInputs.filter((input) => input.trim() !== ''),\n    };\n\n    try {\n      // Make the API call to submit the task details\n      // Adjust the URL and request payload according to your backend API\n       await axios.post(`${API_URL}/auth/addtask`, taskDetails);\n       console.log('Task successfully added with employees');\n\n      await axios.post(`${API_URL}/auth/addtasktoproject`, taskDetails);\n      console.log('Task successfully added to project data');\n  \n      // Handle any post-save actions, like closing the modal or clearing the form\n      setIsModalVisible(false);\n    } catch (error) {\n      console.error('Error adding task with employees:', error);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleNumEmployeesChange = (numEmployees) => {\n    const clampedNumEmployees = Math.max(1, Math.min(5, numEmployees));\n    setNewTaskNumEmployees(clampedNumEmployees);\n    setEmployeeInputs(\n      employeeInputs.slice(0, clampedNumEmployees).concat(Array(Math.max(clampedNumEmployees - employeeInputs.length, 0)).fill(''))\n    );\n  };\n\n  const handleEmployeeInputChange = (text, index) => {\n    const updatedInputs = [...employeeInputs];\n    updatedInputs[index] = text;\n    setEmployeeInputs(updatedInputs);\n  };\n\n  const renderEmployeeInputs = () => {\n    return Array.from({ length: newTaskNumEmployees }, (_, index) => (\n      <TextInput\n        key={index}\n        style={styles.inputField}\n        placeholder={`Employee ${index + 1}`}\n        value={employeeInputs[index]}\n        onChangeText={(text) => handleEmployeeInputChange(text, index)}\n      />\n    ));\n  };\n\n  return (\n    <View>\n      <View style={styles.header}>\n      <View>\n  <Text style={styles.projectCardTitle}>{projectName}</Text>\n</View>\n   \n          {employeeId === 'admin' && (\n          <TouchableOpacity onPress={handleAddTask} style={styles.addButton}>\n            <Text style={styles.addButtonText}>Add Task</Text>\n          </TouchableOpacity>\n)}\n\n      </View>\n      <FlatList\n        data={projectTasks}\n        keyExtractor={(item, index) => index.toString()}\n        renderItem={({ item }) => renderTaskCard(item, projectName)}\n      />\n\n      <Modal\n        visible={isModalVisible}\n        animationType=\"slide\"\n        transparent={true}\n        onRequestClose={handleCloseModal}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.splitScreenContainer}>\n            <View style={styles.leftSide}>\n              <Text style={styles.modalTitle}>Add Task</Text>\n              <TextInput\n              style={styles.inputField}\n              placeholder=\"Project Name\"\n              value={newProjectName} // Set the value to newProjectName state\n              editable={false} // Make the TextInput non-editable\n              />\n\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Task Name\"\n                onChangeText={(text) => setNewTaskName(text)}\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Phase\"\n                onChangeText={(text) => setNewTaskPhase(text)}\n                value={newTaskPhase} // Set the value to newProjectName state\n                editable={false} // Make the TextInput non-editable\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Task Size\"\n                onChangeText={(text) => setNewTaskSize(text)}\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Number of Employees\"\n                onChangeText={(text) => setNewTaskNumEmployees(parseInt(text) || 0)}\n              />\n              <TouchableOpacity onPress={handleUpdateSampleEmployees} style={styles.updateButton}>\n                <Text style={styles.addButtonText}>Generate AI suggestions</Text>\n              </TouchableOpacity>\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Number of Employees\"\n                keyboardType=\"numeric\"\n                value={String(newTaskNumEmployees)}\n                onChangeText={(text) => handleNumEmployeesChange(parseInt(text) || 1)}\n              />\n              {renderEmployeeInputs()}\n            </View>\n            <View style={styles.rightSide}>\n              <Text style={styles.modalTitle}> AI Suggestion</Text>\n              <FlatList\n                data={newTaskEmployees}\n                keyExtractor={(item, index) => index.toString()}\n                renderItem={({ item }) => (\n                  <Text style={styles.sampleEmployee}>{item}</Text>\n                )}\n              />\n            </View>\n          </View>\n          <View style={styles.modalButtons}>\n            <View style={styles.buttonWrapper}>\n              <Button title=\"Save\" onPress={handleSaveTask} color = \"#a832ff\" />\n            </View>\n            <View style={[styles.buttonWrapper]}>\n              <Button title=\"Cancel\" onPress={handleCloseModal} color = \"#a832ff\"/>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\n// to calculate projectCompletion\nconst calculateProjectCompletion = (project) => {\n  let numCompletedTasks = 0;\n  project.Tasks.forEach((task) => {\n    if (task.taskComplete) {\n      numCompletedTasks++;\n    }\n  });\n\n  let percentageCompleted = Math.round((numCompletedTasks / project.Tasks.length) * 100);\n  return isNaN(percentageCompleted) ? 0 : percentageCompleted;\n};\n\nconst renderProjectCard = (navigation, project) => {\n  const teamText = project.Team ? `Team: ${project.Team.join(', ')}` : 'Team: N/A';\n  \n  //Use the project.Name to calculate the Percentage_Complete for a project, need to go through all tasks in every phase. Display that instead of Percentage_Complete. \n  var num = 0;\n  project.Tasks.forEach((val)=>{\n      console.log(val)\n      val.taskComplete ? num++ : null;\n  })\n\n  var percentage = Math.round((num/project.Tasks.length)*100);\n  \n  if(isNaN(percentage)){\n    percentage = 0;\n  }\n\n  let color = '#2ecc71'; // Default color: green\n\n  if (percentage < 35) {\n    color = '#ff5c5c'; // Red color for less than 35%\n  } else if (percentage >= 35 && percentage < 70) {\n    color = '#f1c40f'; // Yellow color for 35% to 70%\n  }\n\nreturn (\n  <TouchableOpacity\n    onPress={() => navigation.navigate('ProjectDetails', { project, navigation })}\n    style={styles.projectCard}\n  >\n    <View style={styles.leftContent}>\n      <Text style={styles.projectTitle}>{project.Name}</Text>\n      <Text style={styles.projectSubtitle}>Agile Development</Text>\n      <View style={styles.dueDate}>\n        <Icon name=\"event\" size={12} style={styles.dueDateIcon} />\n        <Text style={styles.dueDateText}>Due {project.Due_Date}</Text>\n      </View>\n      <View style={styles.taskCounter}>\n        <Icon name=\"list\" size={12} style={styles.taskIcon} />\n        <Text style={styles.taskCounterText}>{project.Tasks.length} Tasks</Text>\n      </View>\n    </View>\n    <View style={styles.rightContent}>\n      <CircularProgress\n        variant=\"determinate\"\n        value={percentage}\n        color=\"secondary\"\n        thickness={5}\n        size={80} // Adjust size based on your layout\n        style={styles.progressCircle}\n      />\n      <Text style={styles.percentageText}>{`${percentage}%`}</Text>\n    </View>\n  </TouchableOpacity>\n);\n};\n\n\n\nconst ProjectDetailsScreen = ({ route }) => {\n  const { project, navigation } = route.params;\n  \n  const chartConfig = {\n    backgroundGradientFrom: \"#fff\",\n    backgroundGradientTo: \"#fff\",\n    color: (opacity = 1) => `rgba(0, 0, 255, ${opacity})`,\n    labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n    barPercentage: 0.5, // Adjust the width of the bars, default is 0.4\n    //barRadius: 5, // Adjust the corner radius of the bars\n    barStyle: {\n      borderRadius: 10, // Additional styling for the bars, if needed\n    },\n    backgroundGradientFromOpacity: 0,\n    backgroundGradientToOpacity: 0,\n    fillShadowGradient: '#a832ff', // Or any other color you use in your app\n    fillShadowGradientOpacity: 1,\n    formatYLabel: label => label + '%',\n  };\n  \n\n  const screenWidth = Dimensions.get(\"window\").width;\n  // const screenWidth = Dimensions.get(\"window\").width;\n  const chartWidth = screenWidth - 5; \n\n  const data = {\n    labels: PHASES.map(phase => phase.name), //yAxisLabel: 'Percentage Complete',\n    datasets: [{\n      data: PHASES.map(phase => {\n        var count = 0, count2 = 0;\n    \n        project.Tasks.forEach(item =>{\n          if(phase.name === item.taskPhase){\n            count++;\n          }\n      \n          if(phase.name === item.taskPhase && item.taskComplete){\n            count2++;\n          }\n        })\n    \n        var percentage = (count2 / count) * 100;\n        if(isNaN(percentage)){\n          percentage = 0;\n        }\n    \n        return percentage;\n      })\n    }]\n  };\n\n  //Calculate phase and phase percentage data by querying the backend, for the projects just like before, and setting the value for the PHASE variable.\n  console.log(project)\n\n  const renderHeader = () => (\n    <View>\n      <Text style={styles.mytext}>Project Phases</Text>\n    </View>\n  );\n\n  const renderFooter = () => (\n    <View>\n      <Text style={styles.mytext}>Progress Chart</Text>\n      <BarChart\n        data={data}\n        width={chartWidth}\n        height={220}\n        yAxisLabel=\"\"\n        chartConfig={chartConfig}\n        verticalLabelRotation={0}\n        style={styles.chartStyle}\n      />\n    </View>\n  );\n\n  // return (\n  //   <ScrollView>\n  //     <View>\n  //       <Text style={styles.mytext}>Project Phases</Text>\n  //       <FlatList\n  //         data={PHASES}\n  //         keyExtractor={(item) => item.name}\n  //         renderItem={({ item }) => renderPhaseCard(navigation, item, project.Name, project)}\n  //         scrollEnabled={false} // Disables scrolling for the FlatList, since it's inside a ScrollView\n  //       />\n  //       <Text style={styles.mytext}>Progress Chart</Text>\n  //       <BarChart\n  //         data={data}\n  //         width={chartWidth}\n  //         height={220}\n  //         yAxisLabel=\"\"\n  //         chartConfig={chartConfig}\n  //         verticalLabelRotation={0}\n  //         style={styles.chartStyle}\n  //       />\n         \n  //     </View>\n  //   </ScrollView>\n  // );\n  return (\n    <FlatList\n      data={PHASES}\n      keyExtractor={(item) => item.name}\n      renderItem={({ item }) => renderPhaseCard(navigation, item, project.Name, project)}\n      ListHeaderComponent={renderHeader}\n      ListFooterComponent={renderFooter}\n      // if your phases list is short, consider adding this to improve scrolling behavior\n      showsVerticalScrollIndicator={true}\n      scrollEnabled={true}\n    />\n  );\n};\n\nconst AllScreen = ({route}) => {\n  const navigation = useNavigation();\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(null);\n  const {employeeName} = route.params;\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/auth/assignedprojects?employeeName=${employeeName}`);\n\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setError('Error fetching projects');\n    }\n  };\n\n  // useEffect(() => {\n  //   fetchProjects();\n  // }, []);\n  useFocusEffect(\n    React.useCallback(() => {\n      fetchProjects();\n      // The empty array ensures this effect runs only once upon focusing\n    }, [])\n  );\n\n\n  return (\n    <ScrollView>\n      <View>\n        {/* <Text style={styles.mytext}>All Projects</Text> */}\n        {/* <TouchableOpacity onPress={fetchProjects} style={{ alignSelf: 'flex-end', marginTop: -10 }}>\n          <Icon name=\"refresh\" size={20} color='#a832ff' style={{ marginRight: 20, marginTop: -20, marginBottom: 5 }} />\n        </TouchableOpacity> */}\n\n        <FlatList\n          style={{ flex: 1 }}\n          data={projects}\n          keyExtractor={(item) => item.Name}\n          renderItem={({ item }) => renderProjectCard(navigation, item)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst OngoingScreen = ({ route }) => {\n  const navigation = useNavigation();\n  const [projects, setProjects] = useState([]);\n  const { employeeName } = route.params;\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/auth/assignedprojects?employeeName=${employeeName}`);\n        const filteredProjects = response.data.filter((project) => calculateProjectCompletion(project) < 100);\n        setProjects(filteredProjects);\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  return (\n    <ScrollView>\n      <View>\n        {/* <Text style={styles.mytext}>Ongoing Projects</Text> */}\n        <FlatList\n          data={projects}\n          keyExtractor={(item) => item.Name}\n          renderItem={({ item }) => renderProjectCard(navigation, item)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst CompletedScreen = ({ route }) => {\n  const navigation = useNavigation();\n  const [projects, setProjects] = useState([]);\n  const { employeeName } = route.params;\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/auth/assignedprojects?employeeName=${employeeName}`);\n        const filteredProjects = response.data.filter((project) => calculateProjectCompletion(project) === 100);\n        setProjects(filteredProjects);\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  return (\n    <ScrollView>\n      <View>\n        {/* <Text style={styles.mytext}>Completed Projects</Text> */}\n        <FlatList\n          data={projects}\n          keyExtractor={(item) => item.Name}\n          renderItem={({ item }) => renderProjectCard(navigation, item)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\nconst PMTopTabNavigator = ({ route }) => {\n  // Destructuring employeeId and employeeName from route.params\n  const { employeeId, employeeName } = route.params;\n\n  return (\n    <Tab.Navigator>\n      <Tab.Screen name=\"All\" component={AllScreen} initialParams={{ employeeName: employeeName }} />\n      <Tab.Screen name=\"Ongoing\" component={OngoingScreen} initialParams={{ employeeName: employeeName }} />\n      <Tab.Screen name=\"Completed\" component={CompletedScreen} initialParams={{ employeeName: employeeName }} />\n    </Tab.Navigator>\n  );\n};\nconst styles = StyleSheet.create({\n  projectCard: {\n    backgroundColor: '#ffffff',\n    borderRadius: 20,\n    padding: 20,\n    marginVertical: 12,\n    marginHorizontal: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  projectCardTitle: {\n    backgroundColor: '#F0EBE3',\n    borderRadius: 20,\n    padding: 15,\n    marginVertical: 8,\n    marginLeft: 2,\n    marginRight: 6,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    fontWeight: 'bold'\n  },\n  leftContent: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  rightContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  projectTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4,\n    color: '#333',\n  },\n  projectSubtitle: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 16,\n  },\n  dueDate: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  dueDateIcon: {\n    marginRight: 8,\n    color: '#666',\n  },\n  dueDateText: {\n    fontSize: 12,\n    color: '#666',\n  },\n  taskCounter: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  taskIcon: {\n    marginRight: 8,\n    color: '#666',\n  },\n  taskCounterText: {\n    fontSize: 12,\n    color: '#666',\n  },\n  percentageText: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: '#333',\n    position: 'absolute',\n    textAlign: 'center',\n  },\n  phaseCardContainer: {\n    backgroundColor: '#111',\n    borderRadius: 20,\n    margin: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 2,\n    flex: 1,\n    marginVertical: 8,\n    marginHorizontal: 16,\n\n  },\n \n  phaseText: {\n    fontSize: 16,\n    color: '#555',\n  },\n  taskCard: {\n    backgroundColor: 'white',\n    padding: 10,\n    margin: 5,\n    marginLeft: 2,\n    borderRadius: 10,\n    borderWidth: 3,\n    borderColor: '#a832ff', // Neon-ish purple border color\n    marginBottom: 12,\n  },\n  taskName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  phase: {\n    color: '#555',\n    marginBottom: 8,\n  },\n  completionStatus: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    color: '#2ecc71',\n  },\n  \n  // cardTitle: {\n  //   fontSize: 15,\n  //   fontWeight: 'bold',\n  //   marginBottom: 8,\n  //   fontFamily: 'sans-serif'\n  // },\n  cardText: {\n    fontSize: 14,\n    fontFamily: 'sans-serif',\n    marginBottom: 6,\n    color: '#000000'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd',\n  },\n  addButton: {\n    backgroundColor: '#a832ff',\n    padding: 7,\n    borderRadius: 5,\n  },\n  updateButton: {\n    backgroundColor: '#a832ff', // Green background color\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 10,\n    marginBottom: 10,\n\n  },\n  addButtonText: {\n    color: '#ffffff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16,\n    backgroundColor: '#a832ff',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)', // Semi-transparent black background\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    overflow: 'hidden', // Ensure border-radius works as expected\n    width: '80%', // Adjust the width as needed\n    maxWidth: 400, // Maximum width for the modal\n    elevation: 5,\n  },\n  modalTitle: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    padding: 4,\n    backgroundColor: '#a832ff', // Header background color\n    color: '#fff', // Header text color\n    textAlign: 'center',\n    borderRadius: 5,\n  },\n  inputField: {\n    height: 40,\n    borderColor: '#a832ff',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  modalButtons: {\n    backgroundColor: '#a832ff',\n    flexDirection: 'row',\n    justifyContent: 'space-between', // or 'space-around' based on your preference\n    marginHorizontal: 20, // Adjust the margin as needed\n    marginTop: 20,\n    width: \"150%\"\n  },\n \n  saveButton: {\n    backgroundColor: '#a832ff',\n    padding: 12,\n    borderRadius: 8,\n    marginRight: 10, // Add margin to the right of \"Save\" button\n  },\n\n  modalButtons: {\n\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10,\n    marginBottom: 10,\n    width: \"150%\" \n  },\n  buttonWrapper: {\n    flex: 2,\n    marginHorizontal: 10, // Add margin to each button\n    width: \"100px\",\n    backgroundColor: 'red'\n  },\n  cancelButton: {\n    backgroundColor: '#a832ff',\n    padding: 12,\n    borderRadius: 8,\n    marginLeft: 10, // Add margin to the left of \"Cancel\" button\n  },\n  buttonText: {\n    color: '#ffffff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n\n  splitScreenContainer: {\n    flexDirection: 'row',\n    flex: 1,\n  },\n  leftSide: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  rightSide: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#e0e0e0',\n  },\n  sampleEmployee: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  employees: {\n    fontSize: 16,\n    color: '#555',\n    marginBottom: 8,\n  },\n\n  mytext: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    margin: 5,\n    marginRight: 5,\n    marginLeft: 22,\n  },\n\n  // Add the new styles\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10,\n  },\n \n\n \n\n  phaseText: {\n    marginTop: 10,\n    color: '#3498db',\n  },\n\n  taskName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  phase: {\n    marginVertical: 5,\n  },\n  completionStatus: {\n    marginVertical: 5,\n    color: '#3498db',\n  },\n  employees: {\n    marginVertical: 5,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  splitScreenContainer: {\n    flexDirection: 'row',\n    width: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  leftSide: {\n    padding: 20,\n    width: '60%',\n  },\n  rightSide: {\n    padding: 20,\n    width: '40%',\n    backgroundColor: '#ecf0f1',\n  },\n  // inputField: {\n  //   borderWidth: 1,\n  //   borderColor: '#bdc3c7',\n  //   borderRadius: 5,\n  //   padding: 10,\n  //   marginVertical: 5,\n  // },\n  // updateButton: {\n  //   backgroundColor: '#3498db',\n  //   padding: 10,\n  //   borderRadius: 5,\n  //   marginTop: 10,\n  // },\n  sampleEmployee: {\n    marginBottom: 5,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    marginTop: 20,\n  },\n  chart: {\n    marginTop: 10, // Add margin top\n    marginBottom: 10,\n    borderRadius: 20, // Add border radius\n    borderWidth: 2, // Add border width if needed\n    borderColor: '#000', // Add border color if needed\n    \n  },\n  \n  leftContent: {\n    flex: 1,\n  },\n  rightContent: {\n    marginLeft: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  percentText:{\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  separator: {\n    width: 1, // Width of the separator line\n    height: '80%', // Height of the separator line, adjust as needed\n    backgroundColor: '#888', // Grey color of the separator line\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 5,\n    marginBottom: 5,\n    shadowColor: '#000', // Color of the shadow\n    shadowOffset: {\n      width: 0, // No horizontal shadow offset\n      height: 3, // Adjust the vertical shadow offset\n    },\n    shadowOpacity: 0.6, // Opacity of the shadow\n    shadowRadius: 3, // Radius of the shadow\n  },\n\n  duedate:{\n    color: '#FF5C5C',\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n\n  // phaseCard: {\n  //   flexDirection: 'row',\n  //   justifyContent: 'space-between',\n  //   alignItems: 'center',\n  //   backgroundColor: 'white',\n  //   borderRadius: 20,\n  //   padding: 20,\n  //   marginVertical: 8,\n  //   marginHorizontal: 16,\n  //   shadowColor: '#000',\n  //   shadowOffset: { width: 0, height: 2 },\n  //   shadowOpacity: 0.1,\n  //   shadowRadius: 2,\n  //   elevation: 3,\n  // },\n  phaseCard: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 20,\n    // shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 3,\n  },\n  cardTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  cardPercentage: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'right',\n  },\n  chartStyle: {\n    borderRadius: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    backgroundColor: 'white',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 3,\n    marginTop: 12\n  },\n  progressBarContainer: {\n    height: 10,\n    width: '100%',\n    backgroundColor: '#e0e0e0',\n    borderRadius: 5,\n    marginTop: 5,\n    overflow: 'hidden',\n  },\n  progressBarBackground: {\n    height: 10,\n    backgroundColor: '#e0e0e0',\n    borderRadius: 5,\n    overflow: 'hidden',\n    // This will ensure the progressBar doesn't go outside the bounds of the card\n    marginVertical: 10, // Add some vertical margin if you want space around the bar\n  },\n  progressBar: {\n    height: '100%',\n    backgroundColor: '#a832ff',\n    borderRadius: 5, // Optional if you want the bar to have rounded corners\n  },\n  cardDetailText: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 5,\n  },\n  // container: {\n  //   flex: 1,\n  //   alignItems: 'center', // Center items horizontally in the container\n  //   justifyContent: 'flex-start', // Align items to the top of the container\n  //   paddingTop: 20, // Space from the top of the container\n  //   backgroundColor: '#FFFFFF', // Background color of the overall screen\n  // },\n\n  // same color theme\n  progressCircle:{\n    color: '#a832ff'\n  }\n\n});\n\n\nexport default PMPage;","import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  Alert,\n  Modal,\n  Picker,\n  Button,\n  ScrollView,\n} from 'react-native';\nimport axios from 'axios';\n\nconst BookRoomPage = () => {\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedTime, setSelectedTime] = useState('');\n  const [notification, setNotification] = useState({ visible: false, message: '', theme: 'light' });\n  const API_URL = 'https://capstone-cmml.onrender.com';\n  \n  const showNotification = (message, theme = 'light') => {\n    setNotification({ visible: true, message, theme });\n    setTimeout(() => {\n      setNotification({ visible: false, message: '', theme: 'light' });\n    }, 3000); // hide after 3 seconds\n  };\n\n  const onRoomClick = (roomId) => {\n    console.log('room clicked');\n    var roomName = document.getElementById(roomId).getAttribute('data-room');\n    setSelectedRoom(roomName);\n    setModalVisible(true);\n  };\n\n  // method to check if room is available or not\n  const fetchRoomData = async (room, time) => {\n    try {\n      const response = await axios.get(`${API_URL}/auth/rooms/${room}/times/${time}`);\n      console.log(response.data);\n\n      // Return the relevant data, e.g., response.data.booked\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching ${room} data:`, error);\n      // Handle error appropriately\n      return false; // Return false in case of an error\n    }\n  };\n\n  const attachRoomClickListeners = () => {\n    const rooms = [\n      'meeting-room-1',\n      'meeting-room-2',\n      'conference-room',\n      'cafeteria',\n      'meeting-room-3',\n      'meeting-room-4',\n      'open-workspace',\n      'meeting-room-5',\n      'meeting-room-6',\n      'meeting-room-7',\n    ];\n\n    rooms.forEach((roomId) => {\n      const roomElement = document.getElementById(roomId);\n      roomElement.addEventListener('click', () => onRoomClick(roomId));\n    });\n  };\n\n  useEffect(() => {\n    attachRoomClickListeners();\n  }, []);\n\n  const handleConfirmBooking = async (room, time) => {\n    try {\n      const { booked } = await fetchRoomData(room, time);\n\n      if (booked) {\n        console.log('Room is available for booking at this time');\n        setModalVisible(false);\n        await updateBookingStatus(room, time, false);\n        showNotification(`You have successfully booked ${room} for ${time}!`, 'green');\n\n        // Set a timeout to revert booking status after 1 minute\n        setTimeout(async () => {\n        await updateBookingStatus(room, time, true); // Revert to available\n        console.log(`Booking status reverted for ${room} at ${time}`);\n      }, 60000); // 60000 milliseconds = 1 minute\n\n\n      } else {\n        console.log('Not available for this time');\n        setModalVisible(false);\n        showNotification(`Booking UnSuccessful for ${room} at ${time}. Please book another timeslot!`, 'red');\n        Alert.alert(\n          'Booking UnSuccessful',\n          'Room is not available for booking at this time.',\n          [{ text: 'OK', onPress: () => console.log('OK Pressed') }],\n          { cancelable: false }\n        );\n      }\n    } catch (error) {\n      console.error('Error handling booking:', error);\n      showNotification('An error occurred while processing your booking. Please try again.', 'red');\n    }\n  };\n\n // Update to include a 'booked' parameter to control booking status\nconst updateBookingStatus = async (room, time, booked) => {\n  try {\n    // Update the request to reflect the desired status based on the 'booked' parameter\n    await axios.put(`${API_URL}/auth/rooms/${room}/times/${time}`, { booked });\n  } catch (error) {\n    console.error(`Error updating booking status for ${room} at ${time}:`, error);\n  }\n};\n  return (\n    <ScrollView\n      style={{ flex: 1 }}\n      horizontal={true}\n      contentContainerStyle={styles.contentContainerStyle}\n    >\n      <View style={styles.svgContainer}>\n        {/* SVG floor plan */}\n        <svg width=\"800\" height=\"600\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"10\" y=\"10\" width=\"780\" height=\"580\" fill=\"lightgrey\" stroke=\"black\" stroke-width=\"2\"/>\n\n\n<rect id=\"meeting-room-1\" data-room=\"Meeting Room 1\" x=\"20\" y=\"20\" width=\"150\" height=\"100\" fill=\"lightblue\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"30\" y=\"70\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 1</text>\n\n<rect id=\"meeting-room-2\" data-room=\"Meeting Room 2\" x=\"20\" y=\"130\" width=\"150\" height=\"100\" fill=\"lightblue\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"30\" y=\"180\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 2</text>\n\n<rect id=\"conference-room\" data-room=\"Conference Room\" x=\"180\" y=\"20\" width=\"250\" height=\"150\" fill=\"lightgreen\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"190\" y=\"95\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Conference Room</text>\n\n<rect id=\"cafeteria\" data-room=\"Cafeteria\" x=\"450\" y=\"20\" width=\"150\" height=\"100\" fill=\"peachpuff\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"460\" y=\"70\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Cafeteria</text>\n\n<rect id=\"meeting-room-3\" data-room=\"Meeting Room 3\" x=\"620\" y=\"20\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"630\" y=\"70\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 3</text>\n\n<rect id=\"meeting-room-4\" data-room=\"Meeting Room 4\" x=\"620\" y=\"130\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"630\" y=\"180\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 4</text>\n\n<rect id=\"open-workspace\" data-room=\"Open Workspace\" x=\"180\" y=\"200\" width=\"400\" height=\"150\" fill=\"khaki\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"190\" y=\"275\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Open Workspace</text>\n\n<rect id=\"meeting-room-5\" data-room=\"Meeting Room 5\" x=\"20\" y=\"450\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"30\" y=\"490\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 5</text>\n\n<rect id=\"meeting-room-6\" data-room=\"Meeting Room 6\" x=\"200\" y=\"450\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"210\" y=\"490\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 6</text>\n\n<rect id=\"meeting-room-7\" data-room=\"Meeting Room 7\" x=\"380\" y=\"450\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"390\" y=\"490\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 7</text>\n        </svg>\n\n\n        {/* Modal for Booking */}\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            setModalVisible(!modalVisible);\n          }}\n        >\n          <View style={styles.modalContainer}>\n            <Text style={styles.modalText}>Room Name: {selectedRoom}</Text>\n            <Text>Select Time:</Text>\n            <View style={styles.pickerContainer}>\n              <Picker\n                selectedValue={selectedTime}\n                onValueChange={(itemValue) => setSelectedTime(itemValue)}\n                style={styles.pickerStyle}\n              >\n                 <Picker.Item label=\"9:00 AM - 10:00 AM\" value=\"9:00 AM - 10:00 AM\" />\n                <Picker.Item label=\"10:00 AM - 11:00 AM\" value=\"10:00 AM - 11:00 AM\" />\n                <Picker.Item label=\"11:00 AM - 12:00 PM\" value=\"11:00 AM - 12:00 PM\" />\n                <Picker.Item label=\"12:00 PM - 1:00 PM\" value=\"12:00 PM - 1:00 PM\" />\n                <Picker.Item label=\"1:00 PM - 2:00 PM\" value=\"1:00 PM - 2:00 PM\" />\n                <Picker.Item label=\"2:00 PM - 3:00 PM\" value=\"2:00 PM - 3:00 PM\" />\n                <Picker.Item label=\"3:00 PM - 4:00 PM\" value=\"3:00 PM - 4:00 PM\" />\n                <Picker.Item label=\"4:00 PM - 5:00 PM\" value=\"4:00 PM - 5:00 PM\" />\n            \n              </Picker>\n            </View>\n            <Button title=\"Confirm Booking\" onPress={() => handleConfirmBooking(selectedRoom, selectedTime)} />\n          </View>\n        </Modal>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainerStyle: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  svgContainer: {\n    width: 800, // Width of your SVG\n    height: 600, // Height of your SVG\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  // Add other styles here as previously defined\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    margin: 10,\n  },\n  modalText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'white',\n  },\n  pickerContainer: {\n    width: '100%',\n    marginBottom: 10,\n  },\n  pickerStyle: {\n    height: 50,\n    width: '100%',\n    backgroundColor: 'white',\n    color: 'black',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  selectedRoomContainer: {\n    marginTop: 16,\n  },\n  selectedRoomText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'green',\n    backgroundColor: 'a832ff'\n  },\n  button: {\n    marginTop: 8,\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  notification: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    zIndex: 1000,\n  },\n  notificationText: {\n    color: '#000',\n  },\n  closeButton: {\n    color: '#000',\n    fontWeight: 'bold',\n  },\n});\n\nexport default BookRoomPage;","import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Platform, Image } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nconst AccountPage = ({ route }) => {\n  const navigation = useNavigation();\n  const { employeeName, employeePic } = route.params;\n  // const API_URL = 'http://localhost:3001'\n const API_URL = 'https://capstone-cmml.onrender.com'\n  \n  const handleLogout = () => {\n    // Logout logic here\n    navigation.navigate('Home');\n  };\n\n  return (\n    <View style={[styles.container, backgroundStyle]}>\n      <View style={styles.profileHeader}>\n      <Image\n        source={employeePic ? { uri: employeePic } : require('./images/Ishan-photo1.jpg')}\n        style={styles.profilePic}\n      />\n        <Text style={styles.profileName}>{employeeName}</Text>\n        <Text style={styles.profileEmail}>{employeeName}@deskSynergy.com</Text>\n      </View>\n\n      <TouchableOpacity style={styles.actionButton}>\n        <Text style={styles.actionText}>Change Password</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.actionButton} onPress={handleLogout}>\n        <Text style={styles.actionText}>Logout</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\n// Define background style based on the platform\nconst backgroundStyle = Platform.select({\n  web: {\n    backgroundImage: 'linear-gradient(180deg, #94B3FD 0%, #B983FF 100%)',\n    flex: 1,\n    height: '100vh', // Ensures the gradient fills the whole viewport height\n  },\n  default: {\n    flex: 1,\n  },\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  profileHeader: {\n    marginBottom: 30,\n    alignItems: 'center',\n  },\n  profilePic: {\n    width: 100, // Adjust the size as needed\n    height: 100, // Adjust the size as needed\n    borderRadius: 50, // Half the size of the width/height to make it circular\n    borderWidth: 3, // Adjust the width as needed\n    borderColor: '#fff', // Adjust the color as needed\n    marginTop: -50, // Adjust this to position your avatar correctly\n    backgroundColor: '#e0e0e0', // Placeholder color if no image is provided\n  },\n  profileName: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginTop: 8,\n    color: '#fff',\n  },\n  profileEmail: {\n    fontSize: 16,\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  actionButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    borderRadius: 25,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginVertical: 10,\n    width: '80%', // Set a max-width for the buttons\n    alignItems: 'center',\n  },\n  actionText: {\n    fontSize: 16,\n    color: '#333',\n    fontWeight: 'bold'\n  },\n});\n\nexport default AccountPage;\n","import React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity, Platform } from \"react-native\";\nimport axios from \"axios\";\n\nconst TemperaturesPage = ({ route }) => {\n  const [tempValue, setTempValue] = useState(10);\n  const [tempColor, setTempColor] = useState(\"cold\");\n  const empid = route.params.employeeId;\n\n  useEffect(() => {\n    getTemperature();\n  }, []);\n\n  const url = 'https://capstone-cmml.onrender.com'\n\n  // const url = 'http://localhost:3001'\n\n  const getTemperature = async () => {\n    try {\n      const response = await axios.get(`${url}/auth/temperature`);\n      setTempValue(response.data);\n      if (response.data >= 15) {\n        setTempColor(\"hot\");\n      } else {\n        setTempColor(\"cold\");\n      }\n    } catch (error) {\n      console.error(`Error fetching temperature: ${error}`);\n    }\n  };\n\n  const increaseTemp = () => {\n    if (tempValue < 30) {\n      const newTemp = tempValue + 1;\n      setTempValue(newTemp);\n      if (newTemp > 14) {\n        setTempColor(\"hot\");\n      }\n    }\n  };\n\n  const decreaseTemp = () => {\n    if (tempValue > 1) {\n      const newTemp = tempValue - 1;\n      setTempValue(newTemp);\n      if (newTemp < 15) {\n        setTempColor(\"cold\");\n      }\n    }\n  };\n\n  const saveTemp = async (currentTemp) => {\n    try {\n      const response = await axios.post(`${url}/savetemperature`, { temperature: currentTemp });\n      setTempValue(response.data.temperature);\n    } catch (error) {\n      console.error(`Error saving temperature: ${error}`);\n    }\n  };\n\n  // Define background style based on the platform\n  const backgroundStyle = Platform.select({\n    web: {\n      backgroundImage: 'linear-gradient(180deg, #94B3FD 0%, #B983FF 100%)',\n      flex: 1,\n      height: '100vh', // Ensures the gradient fills the whole viewport height\n    },\n    default: {\n      flex: 1,\n    },\n  });\n  \n  return (\n    <View style={[styles.appContainer, backgroundStyle]}>\n      <View style={styles.temperatureDisplayContainer}>\n        <View style={[styles.temperatureDisplay, tempColor === \"hot\" ? styles.hot : styles.cold]}>\n          <Text style={styles.temperatureText}>{tempValue}</Text>\n        </View>\n      </View>\n      {empid === \"admin\" && (\n        <>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity style={[styles.circularButton, { backgroundColor: 'white' }]} onPress={increaseTemp}>\n              <Text style={styles.buttonText}>+</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={[styles.circularButton, { backgroundColor: 'white' }]} onPress={decreaseTemp}>\n              <Text style={styles.buttonText}>-</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity style={[styles.button, { backgroundColor: 'white' }]} onPress={() => saveTemp(tempValue)}>\n              <Text style={[styles.buttonText, styles.maintainButton]}>Maintain</Text>\n            </TouchableOpacity>\n          </View>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  appContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    \n  },\n  temperatureDisplayContainer: {\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  temperatureDisplay: {\n    borderRadius: 110,\n    height: 220,\n    width: 220,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 48,\n    color: \"#04040A\",\n    backgroundColor: 'white'\n  },\n  temperatureText: {\n    fontSize: 48,\n    color: \"#04040A\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 30, // Adjust the margin top to control the spacing between button containers\n  },\n  button: {\n    paddingVertical: 10, // Adjust padding to make the buttons bigger\n    paddingHorizontal: 20,\n    marginHorizontal: 20, // Adjust horizontal margin for better spacing between buttons\n    borderWidth: 2,\n    borderColor: '#a832ff', // Neon-ish purple border color\n    shadowColor: '#a832ff', // Neon-ish purple shadow color\n    shadowOffset: { width: 0, height: 3 }, // Adjust shadow offset\n    shadowOpacity: 0.5, // Adjust shadow opacity\n    shadowRadius: 5, // Adjust shadow radius\n    elevation: 5,\n    borderRadius: 20\n  },\n  circularButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 60, // Make the circular button width and height same\n    height: 60,\n    borderRadius: 30, // Make border radius half of the width and height to make it circular\n    borderWidth: 2,\n    borderColor: '#a832ff', // Neon-ish purple border color\n    shadowColor: '#a832ff', // Neon-ish purple shadow color\n    shadowOffset: { width: 0, height: 3 }, // Adjust shadow offset\n    shadowOpacity: 0.5, // Adjust shadow opacity\n    shadowRadius: 5, // Adjust shadow radius\n    elevation: 5, // Android elevation for shadow effect\n    marginHorizontal: 20,\n  },\n\n  buttonText: {\n    fontSize: 24, // Adjust the font size for the button text\n    fontWeight: 'bold'\n  },\n  cold: {\n    shadowColor: \"#249ef5\",\n    shadowOffset: { width: 5, height: 10 },\n    shadowRadius: 75,\n    shadowOpacity: 1,\n  },\n  hot: {\n    shadowColor: \"#ff0000\",\n    shadowOffset: { width: 5, height: 10 },\n    shadowRadius: 75,\n    shadowOpacity: 1,\n  },\n  maintainButton: {\n    fontSize: 20, // Adjust the font size for the Maintain button text\n  },\n});\n\nexport default TemperaturesPage;\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, Image } from 'react-native';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport { useNavigation } from '@react-navigation/native'; // Make sure to import useNavigation\nimport axios from 'axios';\n\n\nconst NewMeetingScreen = ({route}) => {\n  const [meetingName, setMeetingName] = useState('');\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState(new Date());\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [room, setRoom] = useState('');\n  const [members, setMembers] = useState([]);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);\n  const [notification, setNotification] = useState({ visible: false, message: '', theme: 'light' });\n\n  const API_URL = 'https://capstone-cmml.onrender.com';\n  // const API_URL = 'http://localhost:3001';\n\n  const timeSlots = [\n    '09:00AM', '10:00AM', '11:00AM',\n    '12:00PM', '1:00PM', '2:00PM',\n    '3:00PM', '4:00PM', '5:00PM',\n  ];\n\n\n  const { roomData } = route.params;\n  const navigation = useNavigation(); // Use the useNavigation hook to get access to navigation\n\n  const TimeSlotButton = ({ time, onPress, isSelected, isBooked }) => (\n    <TouchableOpacity\n    onPress={onPress}\n    style={[\n      styles.timeSlot,\n      isSelected ? styles.selectedTimeSlot : null,\n      isBooked && !isSelected ? styles.bookedTimeSlot : null,\n    ]}\n    disabled={isBooked}\n  >\n    <Text style={isSelected ? styles.timeSlotTextSelected : styles.timeSlotText}>\n      {time}\n    </Text>\n  </TouchableOpacity>\n  );\n\n  const handleTimeSlotPress = (time) => {\n    console.log('time', time)\n    setSelectedTimeSlot(time);\n    const [hoursStr, minutesStr, period] = time.match(/\\d+|\\D+/g);\n    let hours = parseInt(hoursStr, 10);\n    const minutes = parseInt(minutesStr, 10);\n    if (period === 'PM' && hours < 12) hours += 12;\n    if (period === 'AM' && hours === 12) hours = 0;\n    const newStartTime = new Date(date.setHours(hours, minutes));\n    setStartTime(newStartTime);\n    // console.log('new start time', newStartTime)\n  };\n\n  const handleConfirmBooking = async (roomType, time) => {\n    try {\n      // console.log('time in the handleconfirm method', time)\n      // You need to fetch the specific room data by roomType or other identifiers\n      // const timeSlot = roomData.times.find(slot => slot.startTime === time && !slot.booked);\n      const availablity = roomData.times.find(slot => slot.startTime === time)?.booked || false;\n\n      // console.log('boolean value for time',time, timeSlotBookedStatus)\n  \n      if (!availablity) { // if availablity is false -> room available for booking\n        console.log('Room is available for booking at this time');\n        await updateBookingStatus(roomType, time, true);\n        showNotification(`You have successfully booked ${roomType} for ${time}!`, 'green');\n      } else { // if true -> not available to be booked\n        console.log('Not available for this time');\n        showNotification(`Booking unsuccessful for ${roomType} at ${time}. Please book another timeslot!`, 'red');\n      }\n    } catch (error) {\n      console.error('Error handling booking:', error);\n      showNotification('An error occurred while processing your booking. Please try again.', 'red');\n    }\n  };\n\n  \n  // Update the booking status in your backend\n  const updateBookingStatus = async (roomType, time, bookedStatus) => {\n    try {\n      console.log('in the updatebookingstatus method', roomType, time,bookedStatus)\n      // Find the room and time slot you want to update\n      const response = await axios.put(`${API_URL}/auth/rooms/updateBooking`, {\n        type: roomType,\n        startTime: time,\n        booked: bookedStatus\n      });\n  \n      // Handle the response as needed\n      if (response.status === 200) {\n        console.log('Booking status updated successfully');\n      } else {\n        console.log('Failed to update booking status');\n      }\n    } catch (error) {\n      console.error(`Error updating booking status for ${roomType} at ${time}:`, error);\n    }\n  };\n\n  const showNotification = (message, theme = 'light') => {\n    setNotification({ visible: true, message, theme });\n    setTimeout(() => {\n      setNotification({ visible: false, message: '', theme: 'light' });\n    }, 7000); // hide after 3 seconds\n  };\n\n  const confirmBooking = async () => {\n    if (!selectedTimeSlot) {\n      showNotification('Please select a time slot.', 'red');\n      return;\n    }\n    // This should trigger your API endpoint to update the booking status\n    handleConfirmBooking(roomData.type, selectedTimeSlot);\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      {notification.visible && (\n      <View style={[styles.notification, { backgroundColor: notification.theme === 'red' ? '#FFCCCC' : '#CCFFCC' }]}>\n        <Text style={styles.notificationText}>{notification.message}</Text>\n        <TouchableOpacity onPress={() => setNotification({ visible: false, message: '', theme: 'light' })}>\n          <Text style={styles.closeButton}>X</Text>\n        </TouchableOpacity>\n      </View>\n    )}\n      <Text style={styles.header}>New Meeting</Text>\n      <View style={styles.inputGroup}>\n        <Text style={styles.label}>Start Time</Text>\n        <View style={styles.timeSlotsContainer}>\n          {timeSlots.map((time) => {\n            // Check if the current time slot is booked\n            const isBooked = roomData.times.some(slot => slot.startTime === time && slot.booked);\n            return (\n              <TimeSlotButton\n                key={time}\n                time={time}\n                onPress={() => handleTimeSlotPress(time)}\n                isSelected={selectedTimeSlot === time}\n                isBooked={isBooked} // pass whether the time slot is booked\n              />\n            );\n          })}\n        </View>\n\n        {/* Meeting Title and Description Input Fields */}\n        <TextInput\n          style={styles.input}\n          placeholder=\"Meeting Title\"\n          value={meetingName}\n          onChangeText={setMeetingName}\n        />\n\n        <TextInput\n          style={[styles.input, styles.descriptionInput]}\n          placeholder=\"Description (Optional)\"\n          value={description}\n          onChangeText={setDescription}\n          multiline\n        />\n\n        {/* Create Button */}\n        <TouchableOpacity style={styles.createButton} onPress={confirmBooking}>\n        <Text style={styles.buttonText}>Confirm Booking</Text>\n      </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: 'white',\n  },\n  header: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  inputGroup: {\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 16,\n    color: '#333',\n    marginBottom: 10,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    padding: 10,\n    fontSize: 16,\n    borderRadius: 6,\n    backgroundColor: 'white',\n  },\n  createButton: {\n    backgroundColor: '#a832ff',\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 6,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  inputGroup: {\n    marginBottom: 20,\n    // The rest of your inputGroup styles\n  },\n  timeSlotsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    // Add any additional styling for the container of the time slots\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    padding: 15,\n    fontSize: 16,\n    borderRadius: 10,\n    marginBottom: 15,\n    // Add any additional styling for text input\n  },\n  descriptionInput: {\n    height: 100, // Set height for the description field\n    textAlignVertical: 'top', // Align text to the top for multiline input\n  },\n  timeSlot: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 10,\n    margin: 5,\n    backgroundColor: 'white', // Default background\n    width: '30%', // Approximate width to fit three across on most screens\n  },\n  selectedTimeSlot: {\n    backgroundColor: '#a832ff', // Highlight color for selected time slot\n    borderColor: 'transparent',\n  },\n  timeSlotTextSelected: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  timeSlotText: {\n    textAlign: 'center',\n    color: '#333',\n  },\n  notification: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    zIndex: 1000,\n  },\n  notificationText: {\n    color: '#000',\n  },\n  bookedTimeSlot: {\n    backgroundColor: '#e0e0e0', // a grey background to indicate it's not available\n    borderColor: '#bdbdbd', // darker border color for booked time slot\n    opacity: 0.5, // make the button semi-transparent\n  },\n});\n\nexport default NewMeetingScreen;\n","// RoomScreen.js\nimport React from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, Image } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport NewMeetingScreen from './NewMeetingScreen';\nimport { useNavigation } from '@react-navigation/native'; // Import useNavigation hook\nimport BottomTabNavigator from './BottomTabNavigator';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\n\n\nconst RoomCard = ({ room, onBook }) => (\n  <View style={styles.roomCard}>\n    <Image source={{ uri: room.image }} style={styles.image} />\n    <View style={styles.roomDetails}>\n      <Text style={styles.roomTitle}>{room.type}</Text>\n      <Text style={styles.roomSubtitle}>{room.location}</Text>\n      <View style={styles.roomInfo}>\n        <Icon name=\"people\" size={16} style={styles.infoIcon} />\n        <Text style={styles.infoText}>{room.capacity} persons</Text>\n      </View>\n      <View style={styles.roomInfo}>\n        <Icon name=\"check\" size={16} style={styles.infoIcon} />\n        <Text style={styles.infoText}>{room.amenities.join(', ')}</Text>\n      </View>\n    </View>\n    <TouchableOpacity onPress={() => onBook(room)} style={styles.bookButton}>\n      <Text style={styles.bookButtonText}>Book</Text>\n    </TouchableOpacity>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  roomCard: {\n    backgroundColor: '#ffffff',\n    borderRadius: 20,\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  image: {\n    width: 80,\n    height: 80,\n    borderRadius: 10,\n    marginRight: 16,\n    marginBottom:10,\n  },\n  roomDetails: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  roomTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  roomSubtitle: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 8,\n  },\n  roomInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  infoIcon: {\n    marginRight: 8,\n    color: '#666',\n  },\n  infoText: {\n    fontSize: 12,\n    color: '#666',\n  },\n  bookButton: {\n    backgroundColor: '#a832ff', // This is a blue color, change as needed.\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n    alignSelf: 'flex-end',\n    marginTop: 10,\n  },\n  bookButtonText: {\n    color: '#ffffff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  // ... Add other styles that were previously defined\n});\n\nconst RoomListScreen = () => {\n\n    const navigation = useNavigation();\n    const [roomsData, setRoomsData] = useState([]);\n    const API_URL = 'https://capstone-cmml.onrender.com/auth/rooms' // Replace with your actual API URL\n    // const API_URL = 'http://localhost:3001/auth/rooms'; // Replace with your actual API URL\n  \n    useEffect(() => {\n      const fetchRoomsData = async () => {\n        try {\n          const response = await axios.get(API_URL);\n    \n          setRoomsData(response.data);\n        } catch (error) {\n          console.error('Failed to fetch rooms:', error);\n          // Handle the error, e.g., show a notification or set an error state\n        }\n      };\n  \n      fetchRoomsData();\n    }, []);\n  \n  const handleBookRoom = (room) => {\n    navigation.navigate('NewMeetingScreen', { roomData: room });\n  };\n  \n\n  return (\n    <View style={{ flex: 1 }}>\n      <Text style={{ fontSize: 24, fontWeight: 'bold', margin: 20 }}>Rooms</Text>\n      <FlatList\n        data={roomsData}\n        renderItem={({ item }) => <RoomCard room={item} onBook={handleBookRoom} />}\n        keyExtractor={item => item.id}\n      />\n    </View>\n  );\n};\n\nexport default RoomListScreen;\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport PMPage from './PMPage';\nimport BookRoomPage from './BookRoomPage';\nimport AccountPage from './AccountPage';\nimport TemperaturesPage from './TemperaturesPage'; // Import TemperaturesPage\nimport MeetingRoom from './MeetingRoom';\n\nconst Tab = createBottomTabNavigator();\n\nconst BottomTabNavigator = ({ route }) => {\n  const { employeeId, employeeName, employeePic } = route.params;\n\n  console.log(\"Employee pic:\", employeePic);\n\n  return (\n    <Tab.Navigator\n      tabBarOptions={{\n        activeTintColor: '#a832ff',\n        inactiveTintColor: 'gray',\n        labelStyle: {\n          fontSize: 14,\n          fontWeight: 'bold',\n        },\n        style: {\n          backgroundColor: '#f2f2f2',\n        },\n      }}\n    >\n      <Tab.Screen\n        name=\"PM Tracking\"\n        component={PMPage}\n        initialParams={{ employeeId: employeeId, employeeName: employeeName }}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"track-changes\" size={size} color={color} />,\n        }}\n      />\n      {/* <Tab.Screen\n        name=\"Book a Room\"\n        component={BookRoomPage}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"event-available\" size={size} color={color} />,\n        }}\n      /> */}\n\n    <Tab.Screen\n        name=\"Book a Room\"\n        component={MeetingRoom}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"event-available\" size={size} color={color} />,\n        }}\n      />\n\n      <Tab.Screen\n        name=\"Temperatures\" // New screen name for TemperaturesPage\n        component={TemperaturesPage} // Link to TemperaturesPage component\n        initialParams={{employeeId: employeeId}}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"thermostat\" size={size} color={color} />, // Example icon\n        }}\n      />\n      <Tab.Screen\n        name=\"Account\"\n        component={AccountPage}\n        initialParams={{ employeeName: employeeName, employeePic: employeePic }}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"account-circle\" size={size} color={color} />,\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nexport default BottomTabNavigator;\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity,Platform, Image, TextInput, StyleSheet } from 'react-native';\nimport { Button, Card, Title, Paragraph, IconButton } from 'react-native-paper';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport { useNavigation } from '@react-navigation/native';\nimport axios from 'axios';\nimport colors from './colors';  // Assuming colors.js is in the same directory\n\n\nconst LoginScreen = ({ navigation }) => {\n  const [employeeId, setEmployeeId] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [error, setError] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const url = 'https://capstone-cmml.onrender.com'\n  // const url = 'http://localhost:3001'; // Define your API URL here\n  \n  const handleLogin = async () => {\n    try {\n      const loginData = { employeeId, password };\n      const response = await axios.post(`${url}/auth/login`, loginData);\n\n      if (employeeId === 'admin' && password === 'admin') {\n        navigation.navigate('Account', { employeeID: employeeId });\n        setIsAdmin(true);\n      }\n\n      console.log(response);\n      console.log('Login successful:', response.data);\n      setLoggedIn(true);\n      \n       // Extracting employeeId and employeeName directly from response.data\n       const { id, name: employeeName, pic: employeePic } = response.data;\n\n       // Logging the extracted values\n       console.log('Employee ID:', id);\n       console.log('Employee Name:', employeeName);\n \n       // Navigating to BottomTabNav with employeeId and employeeName as parameters\n       navigation.navigate('BottomTabNav', { employeeId: id, employeeName: employeeName, employeePic: employeePic });\n \n\n    } catch (error) {\n      console.error('Error logging in:', error);\n      setError('Incorrect user information. Please try again.');\n    }\n  };\n\n  \n\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('./images/desk-synergy1.png')} // Adjust the path based on your project structure\n        style={styles.logo}\n      />\n      <Text style={styles.title}>Welcome, Glad to see you!</Text>\n      <TextInput\n        style={styles.input}\n        onChangeText={setEmployeeId}\n        value={employeeId}\n        placeholder=\"EMP ID\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        style={styles.input}\n        secureTextEntry\n        onChangeText={setPassword}\n        value={password}\n        placeholder=\"Password\"\n      />\n      <TouchableOpacity onPress={handleLogin} style={styles.loginButton}>\n        <Text style={styles.loginButtonText}>Login</Text>\n      </TouchableOpacity>\n      <Text style={styles.registerText}>\n        Don't have an account?{' '}\n        <Text onPress={() => navigation.navigate('Register')} style={styles.registerLink}>\n          Sign Up Now\n        </Text>\n      </Text>\n      {error !== '' && <Text style={styles.error}>{error}</Text>}\n    </View>\n  );\n};\n\n\n// Determine the background style based on the platform\nconst backgroundStyle = Platform.select({\n  web: {\n    backgroundImage: 'linear-gradient(180deg, #94B3FD 0%, #B983FF 100%)',\n  },\n  default: {},\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    // This background should be set only if Platform.OS === 'web'\n    ...backgroundStyle,\n  },\n  title: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 30,\n  },\n  input: {\n    width: '80%',\n    padding: 16,\n    marginBottom: 10,\n    borderRadius: 25,\n    borderWidth: 1,\n    borderColor: '#fff',\n    backgroundColor: '#fff',\n    color: '#000',\n    fontSize: 16,\n  },\n  loginButton: {\n    width: '80%',\n    backgroundColor: '#ffffff',\n    padding: 16,\n    borderRadius: 25,\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: '#8E2DE2', // Adjusted to match your gradient colors\n    fontWeight: 'bold',\n  },\n  registerText: {\n    color: '#fff',\n    fontSize: 16,\n  },\n  registerLink: {\n    textDecorationLine: 'underline',\n  },\n  error: {\n    color: 'red',\n    marginTop: 10,\n  },\n  logo: {\n    width: 200,\n    height: 200,\n    marginBottom: 20,\n  },\n});\nexport default LoginScreen;\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, Platform, TextInput, StyleSheet, Image } from 'react-native';\nimport axios from 'axios';\nimport { Button, Card, Title, IconButton } from 'react-native-paper';\n\n\nconst RegisterScreen = ({ navigation }) => {\n  const [employeeName, setEmployeeName] = useState('');\n  const [employeeId, setEmployeeId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const url = 'https://capstone-cmml.onrender.com'\n  // const url = 'http://localhost:3001'\n\n  const handleHome = () => {\n    navigation.navigate('Home');\n  };\n\n  const handleRegister = async () => {\n    try {\n      const registrationData = { employeeName, employeeId, password };\n      const response = await axios.post(`${url}/auth/register`, registrationData);\n      console.log('User registered successfully:', response.data);\n      navigation.navigate('Login');\n    } catch (error) {\n      console.error('Error registering user:', error);\n      setError('Registration failed. Please try again.');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('./images/desk-synergy1.png')} // Adjust the path based on your project structure\n        style={styles.logo}\n      />\n      <Text style={styles.title}>Create Account</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Full Name\"\n        value={employeeName}\n        onChangeText={setEmployeeName}\n        placeholderTextColor=\"#6b7280\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Employee ID\"\n        value={employeeId}\n        onChangeText={setEmployeeId}\n        placeholderTextColor=\"#6b7280\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        secureTextEntry\n        value={password}\n        onChangeText={setPassword}\n        placeholderTextColor=\"#6b7280\"\n      />\n      <TouchableOpacity onPress={handleRegister} style={styles.button}>\n        <Text style={styles.buttonText}>Register</Text>\n      </TouchableOpacity>\n      <Text style={styles.signInText}>\n        Already have an account?{' '}\n        <Text onPress={() => navigation.navigate('Login')} style={styles.signInLink}>\n          Sign In\n        </Text>\n      </Text>\n      {error !== '' && <Text style={styles.error}>{error}</Text>}\n    </View>\n  );\n};\n\n// Determine the background style based on the platform\nconst backgroundStyle = Platform.select({\n  web: {\n    backgroundImage: 'linear-gradient(180deg, #94B3FD 0%, #B983FF 100%)',\n  },\n  default: {},\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    ...backgroundStyle,\n  },\n  title: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 30,\n  },\n  input: {\n    width: '80%',\n    padding: 16,\n    marginBottom: 10,\n    borderRadius: 25,\n    borderWidth: 1,\n    borderColor: '#fff',\n    backgroundColor: '#fff',\n    color: '#000',\n    fontSize: 16,\n  },\n  button: {\n    width: '80%',\n    backgroundColor: '#ffffff',\n    padding: 16,\n    borderRadius: 25,\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  buttonText: {\n    fontSize: 18,\n    color: '#8E2DE2',\n    fontWeight: 'bold',\n  },\n  signInText: {\n    color: '#fff',\n    fontSize: 16,\n  },\n  signInLink: {\n    textDecorationLine: 'underline',\n  },\n  error: {\n    color: 'red',\n    marginTop: 10,\n  },\n  logo: {\n    width: 200,\n    height: 200,\n    marginBottom: 20,\n  },\n});\n\nexport default RegisterScreen;\n","import React from 'react';\nimport { View, Text, Image, TouchableOpacity, StyleSheet, Platform } from 'react-native';\n\nconst Homepage = ({ navigation }) => {\n  const handleLoginClick = () => {\n    navigation.navigate('Login');\n  };\n\n  const handleRegisterClick = () => {\n    navigation.navigate('Register');\n  };\n\n  // Style object for container with gradient background\n  const containerStyle = Platform.select({\n    web: {\n      // For web: use backgroundImage with a horizontal gradient\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      width: '100%',\n      backgroundImage: 'linear-gradient(#94B3FD, #B983FF)',\n    },\n    default: {\n      // For native: use styles.container which will have LinearGradient component\n      ...styles.container,\n    },\n  });\n\n  return (\n    <View style={containerStyle}>\n      <Image\n        source={require('./images/desk-synergy1.png')} // Adjust the path based on your project structure\n        style={styles.logo}\n      />\n      <TouchableOpacity style={styles.button} onPress={handleLoginClick}>\n        <Text style={styles.buttonText}>Login</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.button} onPress={handleRegisterClick}>\n        <Text style={styles.buttonText}>Sign Up</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: Platform.select({\n    web: {\n      // Web-specific gradient styling\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 16,\n      height: '100vh', // Take full height of the viewport\n      background: 'linear-gradient(to right, #94B3FD, #B983FF)',\n    },\n    default: {\n      // Native uses these styles with LinearGradient component\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 16,\n    },\n  }),\n  logo: {\n    width: 200,\n    height: 200,\n    marginBottom: 20,\n  },\n  title: {\n    fontSize: 24,\n    color: '#ffffff',\n    marginBottom: 30,\n    fontWeight: 'bold',\n  },\n  button: {\n    width: '80%',\n    backgroundColor: '#ffffff',\n    padding: 15,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ffffff',\n  },\n  buttonText: {\n    color: '#8E2DE2',\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  guestText: {\n    color: '#ffffff',\n    marginTop: 15,\n  },\n});\n\nexport default Homepage;\n","import React from 'react';\nimport { View, Text, StyleSheet, Platform, Dimensions } from 'react-native';\nimport Onboarding from 'react-native-onboarding-swiper';\nimport LottieView from 'lottie-react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nconst { width, height } = Dimensions.get('window');\n\nconst backgroundStyle = Platform.select({\n  web: {\n    backgroundImage: 'linear-gradient(180deg, #94B3FD 0%, #B983FF 100%)',\n    width: width,\n    height: height,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  default: {\n    flex: 1,\n  },\n});\n\nexport default function OnboardScreen() {\n  const navigation = useNavigation();\n\n  const handleDone = () => {\n    navigation.navigate('Home');\n  };\n\n  return (\n    <View style={[styles.container, backgroundStyle]}>\n      <Onboarding\n        onDone={handleDone}\n        onSkip={handleDone}\n        skipLabel=\"Skip\" // Optionally customize skip label\n        containerStyles={{ paddingHorizontal: 15 }}\n        pages={[\n          {\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/arrow.json')} autoPlay loop />\n                <Text style={styles.titleText}>Welcome to DeskSynergy</Text>\n              </View>\n            ),\n          },\n          {\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/happy.json')} autoPlay loop />\n                <Text style={styles.titleText}>Boost Productivity</Text>\n                <Text style={styles.smallText}>Seamless Work collaboration</Text>\n              </View>\n            ),\n          },\n          {\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/WorkEnvironment.json')} autoPlay loop />\n                <Text style={styles.titleText}>Work Seamlessly</Text>\n                <Text style={styles.smallText}>Handle office functions in one place</Text>\n              </View>\n            ),\n          },\n          {\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/rocket.json')} autoPlay loop />\n                <Text style={styles.titleText}>Achieve Higher Goals</Text>\n                <Text style={styles.smallText}>Manage Better, Perform Better!</Text>\n              </View>\n            ),\n          },\n        ]}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'transparent', // Set to transparent to let the background style show\n  },\n  lottieContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  titleText: {\n    marginTop: 20,\n    fontSize: 27,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  smallText: {\n    marginTop: 10,\n    fontSize: 21,\n    color: 'white',\n  },\n});\n","// App.js\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LoginScreen from './LoginScreen';\nimport RegisterScreen from './RegisterScreen';\nimport homepage from './homepage';\nimport PMPage from './PMPage';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport BookRoomPage from './BookRoomPage';\nimport OnboardingScreen from './OnboardScreen'; // Import the OnboardingScreen component\nimport AccountPage from './AccountPage';\nimport AddProject from './AddProjectPage';\nimport AddNotification from './AddNotification';\nimport MeetingRoom from './MeetingRoom';\nimport NewMeetingScreen from './NewMeetingScreen';\n\n\nconst Stack = createStackNavigator();\n// const stylesCss = Asset.fromModule(require('./App.css')).uri;\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Onboarding\">\n        <Stack.Screen\n          name=\"Onboarding\"\n          component={OnboardingScreen}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"Register\"\n          component={RegisterScreen}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"Login\"\n          component={LoginScreen}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"Home\"\n          component={homepage}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"PMPage\"\n          component={PMPage}\n          options={{ headerShown: true }}\n        />\n\n        <Stack.Screen\n          name=\"BottomTabNav\"\n          component={BottomTabNavigator}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"BookRoomPage\"\n          component={BookRoomPage}\n          options={{ headerShown: true }}\n        />\n\n        <Stack.Screen\n          name=\"AccountPage\"\n          component={AccountPage} // Use a WebView component for home.html\n          options={{ headerShown: true }}\n        />\n\n      <Stack.Screen\n          name=\"AddNotification\"\n          component={AddNotification} // Use a WebView component for home.html\n          options={{ headerShown: true }}\n        />  \n        \n        <Stack.Screen\n          name=\"NewRoom\"\n          component={MeetingRoom}\n          options={{ headerShown: true }}\n        />\n      <Stack.Screen\n          name=\"NewMeetingScreen\"\n          component={NewMeetingScreen}\n          options={{ headerShown: true }}\n        />\n\n\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [393], () => (__webpack_require__(2308)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","StyleSheet","create","container","flex","justifyContent","alignItems","paddingTop","paddingHorizontal","title","fontSize","fontWeight","marginBottom","color","input","height","width","backgroundColor","borderColor","borderWidth","paddingLeft","borderRadius","button","elevation","marginTop","buttonText","inputContainer","datePickerRow","flexDirection","dateInput","calendarButton","padding","marginLeft","calendarText","notification","position","top","left","right","zIndex","notificationText","closeButton","_useState","useState","_useState2","_slicedToArray","projectName","setProjectName","_useState3","_useState4","team","setTeam","_useState5","_useState6","dueDate","setDueDate","_useState7","_useState8","isDatePickerVisible","setDatePickerVisibility","_useState9","visible","message","theme","_useState10","setNotification","showNotification","arguments","length","undefined","setTimeout","handleAddProject","_ref","_asyncToGenerator","teamArray","split","map","item","trim","projectData","Name","Due_Date","Team","axios","post","error","apply","hideDatePicker","_jsxs","View","style","children","_jsx","Text","TouchableOpacity","onPress","TextInput","placeholder","value","onChangeText","DateTimePickerModal","isVisible","mode","onConfirm","date","toISOString","onCancel","paddingVertical","marginVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","label","statusText","project","taskName","taskComplete","useEffect","console","log","isComplete","setIsComplete","onToggleSwitch","_ref2","prevValue","then","response","catch","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","setTitle","setMessage","time","setTime","employees","setEmployees","navigation","useNavigation","handleAddNotification","notificationData","targetEmployeeIds","createdAt","navigate","Alert","header","cardUnread","cardTitle","cardMessage","cardTime","titleRow","deleteButton","refreshButton","alignSelf","marginRight","addNotificationButton","cardRead","borderStyle","opacity","markAsReadButton","markAsReadButtonText","textAlign","route","notifications","setNotifications","employeeId","params","url","fetchNotifications","get","data","markAsRead","_ref3","notificationTitle","patch","n","readBy","includes","_objectSpread","concat","_toConsumableArray","_x","deleteNotification","_ref4","delete","filter","_x2","Icon","name","size","index","card","Date","toLocaleString","API_URL","Tab","createMaterialTopTabNavigator","Stack","createStackNavigator","PHASES","percentage","Math","floor","random","TasksPage","_route$params2","phase","isModalVisible","setIsModalVisible","newTaskName","setNewTaskName","newTaskPhase","setNewTaskPhase","newTaskSize","setNewTaskSize","newTaskNumEmployees","setNewTaskNumEmployees","_useState11","_useState12","newTaskEmployees","setNewTaskEmployees","_useState13","_useState14","employeeInputs","setEmployeeInputs","_useState15","_useState16","projectTasks","setProjectTasks","_useState17","_useState18","newProjectName","setNewProjectName","fetchTasks","find","p","tasksForPhase","Tasks","t","taskPhase","handleUpdateSampleEmployees","user_Data","user_data","new_task_name","val","convertStringToJson","val_json","JSON","parse","lines","shift","line","_line$trim$split","_line$trim$split2","_toArray","id","slice","join","parseInt","EmployeeName","stringify","jsonOutput","handleSaveTask","_ref5","taskDetails","taskSize","handleCloseModal","projectCardTitle","addButton","addButtonText","FlatList","keyExtractor","toString","renderItem","_ref6","task","phaseCardContainer","phaseCard","TaskToggle","renderTaskCard","Modal","animationType","transparent","onRequestClose","modalContainer","splitScreenContainer","leftSide","modalTitle","inputField","editable","text","updateButton","keyboardType","String","numEmployees","clampedNumEmployees","max","min","Array","fill","handleNumEmployeesChange","from","_","updatedInputs","handleEmployeeInputChange","rightSide","_ref7","sampleEmployee","modalButtons","buttonWrapper","Button","calculateProjectCompletion","numCompletedTasks","forEach","percentageCompleted","round","isNaN","renderProjectCard","num","projectCard","leftContent","projectTitle","projectSubtitle","dueDateIcon","dueDateText","taskCounter","taskIcon","taskCounterText","rightContent","CircularProgress","variant","thickness","progressCircle","percentageText","ProjectDetailsScreen","_ref8","_route$params3","chartConfig","backgroundGradientFrom","backgroundGradientTo","labelColor","barPercentage","barStyle","backgroundGradientFromOpacity","backgroundGradientToOpacity","fillShadowGradient","fillShadowGradientOpacity","formatYLabel","chartWidth","Dimensions","labels","datasets","count","count2","_ref9","ceil","progressBarBackground","progressBar","cardPercentage","renderPhaseCard","ListHeaderComponent","mytext","ListFooterComponent","BarChart","yAxisLabel","verticalLabelRotation","chartStyle","showsVerticalScrollIndicator","scrollEnabled","AllScreen","_ref10","_useState19","_useState20","projects","setProjects","_useState21","_useState22","setError","employeeName","fetchProjects","_ref11","useFocusEffect","React","ScrollView","_ref12","OngoingScreen","_ref13","_useState23","_useState24","_ref14","filteredProjects","_ref15","CompletedScreen","_ref16","_useState25","_useState26","_ref17","_ref18","PMTopTabNavigator","_ref19","_route$params4","Navigator","Screen","component","initialParams","marginHorizontal","margin","phaseText","taskCard","completionStatus","cardText","fontFamily","borderBottomWidth","borderBottomColor","modalContent","overflow","maxWidth","saveButton","cancelButton","chart","display","percentText","separator","duedate","progressBarContainer","cardDetailText","_route$params","setOptions","headerRight","initialRouteName","headerMode","AddProjectPage","NotificationBar","contentContainerStyle","flexGrow","svgContainer","modalText","pickerContainer","pickerStyle","paddingRight","selectedRoomContainer","selectedRoomText","selectedRoom","setSelectedRoom","modalVisible","setModalVisible","selectedTime","setSelectedTime","fetchRoomData","room","attachRoomClickListeners","roomId","document","getElementById","addEventListener","roomName","getAttribute","onRoomClick","handleConfirmBooking","booked","updateBookingStatus","alert","cancelable","_x3","_x4","put","_x5","_x6","_x7","horizontal","xmlns","x","y","stroke","Picker","selectedValue","itemValue","Item","backgroundStyle","Platform","select","web","backgroundImage","default","profileHeader","profilePic","profileName","profileEmail","actionButton","actionText","employeePic","Image","source","uri","require","appContainer","temperatureDisplayContainer","temperatureDisplay","temperatureText","buttonContainer","circularButton","cold","hot","maintainButton","tempValue","setTempValue","tempColor","setTempColor","empid","getTemperature","saveTemp","currentTemp","temperature","_Fragment","newTemp","inputGroup","createButton","timeSlotsContainer","flexWrap","descriptionInput","textAlignVertical","timeSlot","selectedTimeSlot","timeSlotTextSelected","timeSlotText","bookedTimeSlot","meetingName","setMeetingName","description","setDescription","setStartTime","setSelectedTimeSlot","roomData","TimeSlotButton","isSelected","isBooked","disabled","roomType","_roomData$times$find","times","slot","startTime","bookedStatus","type","status","confirmBooking","some","_time$match","match","_time$match2","hoursStr","minutesStr","period","hours","minutes","newStartTime","setHours","handleTimeSlotPress","multiline","RoomCard","onBook","roomCard","image","roomDetails","roomTitle","roomSubtitle","location","roomInfo","infoIcon","infoText","capacity","amenities","bookButton","bookButtonText","roomsData","setRoomsData","fetchRoomsData","handleBookRoom","createBottomTabNavigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","PMPage","options","tabBarIcon","MeetingRoom","TemperaturesPage","AccountPage","loginButton","loginButtonText","registerText","registerLink","textDecorationLine","logo","setEmployeeId","password","setPassword","setLoggedIn","setIsAdmin","handleLogin","loginData","employeeID","_response$data","pic","secureTextEntry","signInText","signInLink","setEmployeeName","handleRegister","registrationData","placeholderTextColor","background","guestText","containerStyle","_Dimensions$get","OnboardScreen","handleDone","Onboarding","onDone","onSkip","skipLabel","containerStyles","pages","lottieContainer","LottieView","autoPlay","loop","titleText","smallText","NavigationContainer","OnboardingScreen","headerShown","RegisterScreen","LoginScreen","homepage","BottomTabNavigator","BookRoomPage","AddNotification","NewMeetingScreen","registerRootComponent","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","this","ns","def","current","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}